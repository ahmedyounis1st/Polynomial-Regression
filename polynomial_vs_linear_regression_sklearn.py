# -*- coding: utf-8 -*-
"""polynomial_vs_linear_regression_sklearn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I8XcIJFj4yoGhJL8MM7Hn7wU7s-4TncC
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# import the dataset
df = pd.read_csv('Position_Salaries.csv')
df.head()

X = df.iloc[:,1:2].values # independent variables
y = df.iloc[:,-1].values # dependent variable

plt.scatter(X, y)
plt.title('Position Salary')
plt.xlabel('Levels')
plt.ylabel('Salaries')
plt.show();

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X,y)

plt.scatter(X, y)
plt.plot(X, lin_reg.predict(X), color = 'red')
plt.title('Position Salary')
plt.xlabel('Levels')
plt.ylabel('Salaries')
plt.show();

from sklearn.preprocessing  import PolynomialFeatures
poly = PolynomialFeatures(degree = 2)
X_poly = poly.fit_transform(X)

poly_reg = LinearRegression()
poly_reg.fit(X_poly,y)

plt.scatter(X, y)
plt.plot(X, poly_reg.predict(X_poly), color = 'red')
plt.title('Position Salary')
plt.xlabel('Levels')
plt.ylabel('Salaries')
plt.show();

lin_reg.predict([[6.5]])

poly_reg.predict(poly.transform([[6.5]]))

from sklearn import metrics  
mse = metrics.mean_squared_error(y, lin_reg.predict(X))
print('Mean Squared Error: {} '.format(mse.astype(int)))

mse = metrics.mean_squared_error(y, poly_reg.predict(X_poly))
print('Mean Squared Error: {} '.format(mse.astype(int)))